trigger:
  branches:
    include:
    - main
    - build/*
  paths:
    include:
    - twinn_ml_interface/_version.py

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: buildPackage
  displayName: Build twinn-ml-interface package
  strategy:
    matrix:
      Python310:
        python.version: '3.10'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: true
      architecture: 'x64'
    displayName: Python version $(python.version)

  # On non-master branches, we change the version to the dev one
  - script: |
      sed -i '/__version__/d' twinn_ml_interface/_version.py
      sed -i 's/__dev_version__/__version__/g' twinn_ml_interface/_version.py
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
    displayName: set dev build

  # Install python distributions like wheel, twine etc
  - script: python -m pip install --upgrade pip wheel setuptools twine build
    displayName: 'Install tools'

  # Build the python distribution from source
  - script: python -m build
    displayName: 'Build package'

  - task: TwineAuthenticate@1
    inputs:
      artifactFeed: 'SAM/SAM'

  - script: twine upload -r SAM --config-file $(PYPIRC_PATH) dist/*.whl
    displayName: 'Upload package'
